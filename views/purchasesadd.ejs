<%- include('partials/header')%>

    <body id="page-top">
        <!-- Page Wrapper -->
        <div id="wrapper">
            <%- include('partials/sidebar menu')%>
                <!-- Content Wrapper -->
                <div id="content-wrapper" class="d-flex flex-column">
                    <!-- Main Content -->
                    <div id="content">
                        <%- include('partials/topbar menu')%>
                            <!-- Begin Page Content -->
                            <div class="container-fluid">
                                <!-- Page Heading -->
                                <h3 class="h3 mb-2 text-gray-800">Purchases</h3>

                                <div class="card shadow mb-4">
                                    <div class="card-header">
                                        <h1 class="h1 m-0 text-gray-600">Transaction</h1>
                                    </div>
                                    <div class="card-body">
                                        <form id="addPurchaseForm">
                                            <div class="row mb-3">
                                                <div class="col-md-4">
                                                    <label for="invoice" class="col-form-label">Invoice</label>
                                                    <input type="text" class="form-control" id="invoice" name="invoice"
                                                        readonly>
                                                </div>
                                                <div class="col-md-4">
                                                    <label for="timeText" class="col-form-label">Time</label>
                                                    <input type="text" class="form-control" id="timeText"
                                                        name="timeText" disabled>
                                                    <input type="hidden" name="time" id="time">
                                                </div>
                                                <div class="col-md-4">
                                                    <label for="operatorText" class="col-form-label">Operator</label>
                                                    <input type="text" class="form-control" id="operatorText"
                                                        name="operatorText" disabled>
                                                    <input type="hidden" class="form-control" id="operator"
                                                        name="operator" readonly>
                                                </div>
                                            </div>
                                    </div>
                                    <hr>
                                    <div class="card-body">
                                        <div class="row mb-3">
                                            <div class="col-md-4">
                                                <label for="itemcode" class="col-form-label">Goods Barcode</label>
                                                <select name="itemcode" id="itemcode" class="form-control" required>
                                                </select>
                                            </div>
                                            <div class="col-md-4">
                                                <label for="goodsname" class="col-form-label">Goods Name</label>
                                                <input type="text" class="form-control" id="goodsname" name="goodsname"
                                                    readonly>
                                            </div>
                                            <div class="col-md-4">
                                                <label for="stock" class="col-form-label">Stock</label>
                                                <input type="text" class="form-control" id="stock" name="stock"
                                                    readonly>
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-md-4">
                                                <label for="purchaseprice" class="col-form-label">Purchase Price</label>
                                                <input type="number" class="form-control" id="purchaseprice"
                                                    name="purchaseprice" oninput="calculateTotalPrice()">
                                            </div>
                                            <div class="col-md-4">
                                                <label for="quantity" class="col-form-label">Qty</label>
                                                <input type="number" class="form-control" id="quantity" name="quantity"
                                                    oninput="calculateTotalPrice()">
                                            </div>
                                            <div class="col-md-4">
                                                <label for="totalpriceText" class="col-form-label">Total Price</label>
                                                <input type="text" class="form-control" id="totalpriceText"
                                                    name="totalpriceText" style="background-color: white; opacity: 1;"
                                                    disabled>
                                                <input type="hidden" class="form-control" id="totalprice"
                                                    name="totalprice" style="background-color: white; opacity: 1;"
                                                    readonly>
                                            </div>
                                        </div>
                                        <button class="btn btn-primary btn-icon-split" onclick="submitData()">
                                            <span class="icon text-white-50">
                                                <i class="fa-solid fa-plus"></i></span>
                                            <span class="text">Add</span>
                                        </button>
                                    </div>
                                    <hr>
                                    <table class="table table-striped dataTable">
                                        <thead>
                                            <tr>
                                                <th>No</th>
                                                <th>Barcode</th>
                                                <th>Name</th>
                                                <th>Qty</th>
                                                <th>Price</th>
                                                <th>Total Price</th>
                                            </tr>
                                        </thead>
                                        <tbody id="tablePurchases">
                                            <tr>
                                                <td colspan="6" style="text-align: center;">
                                                    no items
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <div class="card-footer">
                                        <div class="row mb-3">
                                            <label for="totalsumText" class="col-form-label col-md-2">Total
                                                Summary</label>
                                            <div class="col-md-10 pl-0">
                                                <input type="text" class="form-control" id="totalsumText"
                                                    name="totalsumText" required placeholder="0.00" disabled>
                                                <input type="hidden" class="form-control" id="totalsum" name="totalsum"
                                                    required placeholder="0.00" value=0 readonly>
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <label for="supplier" class="col-form-label col-md-2">Supplier</label>
                                            <div class="col-md-10 pl-0">
                                                <select name="supplier" id="supplier" class="form-control">
                                                </select>
                                            </div>
                                        </div>
                                        <button class="btn btn-success btn-icon-split" onclick="updateSupplier()">
                                            <span class="icon text-white-50">
                                                <i class="fa-solid fa-plus"></i>
                                            </span>
                                            <span class="text">Finish</span>
                                        </button>
                                        </form>
                                        <a href="/purchases" class="btn btn-warning btn-icon-split">
                                            <span class="icon text-white-50">
                                                <i class="fa-solid fa-arrow-left"></i>
                                            </span>
                                            <span class="text">Back</span>
                                        </a>
                                    </div>
                                </div>
                            </div>
                    </div>
                    <%- include('partials/footer')%>
                </div>
        </div>

        <script>
            var readGoodsParams = {
                page: 1,
                totalPages: 1,
                limit: 0,
                sortBy: "barcode",
                order: "asc",
                query: ''
            }
            var readSuppliersParams = {
                page: 1,
                totalPages: 1,
                limit: 0,
                sortBy: "supplierid",
                order: "asc",
                query: ''
            }
            var readPurchaseitemsParams = {
                page: 1,
                totalPages: 1,
                limit: 0,
                sortBy: "id",
                order: "asc",
                query: ''
            }
            const invoice = document.getElementById("invoice")
            const timeText = document.getElementById("timeText")
            const time = document.getElementById("time")
            const operatorText = document.getElementById("operatorText")
            const operator = document.getElementById("operator")


            const getData = () => {
                fetch(`http://localhost:3000/data/invoice`).then((response) => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                }).then((response) => {
                    invoice.value = response.invoice

                    const date = new Date(response.time);
                    const day = date.getDate();
                    const month = date.toLocaleString('default', { month: 'short' });
                    const year = date.getFullYear();
                    const hours = String(date.getHours()).padStart(2, '0');
                    const minutes = String(date.getMinutes()).padStart(2, '0');
                    const seconds = String(date.getSeconds()).padStart(2, '0');
                    const formattedDate = `${day} ${month} ${year} ${hours}:${minutes}:${seconds}`;
                    timeText.value = formattedDate
                    time.value = response.time

                    operator.value = `<%= user.userid %>`
                    operatorText.value = `<%= user.name %>`
                }).then(() => {
                    fetch(`http://localhost:3000/data/goods?${new URLSearchParams(readGoodsParams).toString()}`).then((response) => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! Status: ${response.status}`);
                        }
                        return response.json();
                    }).then((response) => {
                        let selectOptions = '<option value ="" disabled selected>--- Select Item ---</option>'
                        response.data.forEach((item, index) => {
                            selectOptions += `<option value ="${item.barcode}">${item.barcode} - ${item.name}</option>`
                        })
                        document.getElementById('itemcode').innerHTML = selectOptions
                    }).then(() => {
                        fetch(`http://localhost:3000/data/suppliers?${new URLSearchParams(readSuppliersParams).toString()}`).then((response) => {
                            if (!response.ok) {
                                throw new Error(`HTTP error! Status: ${response.status}`);
                            }
                            return response.json();
                        }).then((response) => {
                            let selectOptions = '<option value ="" selected>--- Select Supplier ---</option>'
                            response.data.forEach((item, index) => {
                                selectOptions += `<option value ="${item.supplierid}">${item.name}</option>`
                            })
                            document.getElementById('supplier').innerHTML = selectOptions
                        })
                    })
                })
            }

            getData()

            const addPurchaseForm = document.getElementById('addPurchaseForm');

            function formatCurrency(value) {
                const formatter = new Intl.NumberFormat('id-ID', {
                    style: 'currency',
                    currency: 'IDR',
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2
                });
                return formatter.format(value);
            }

            document.getElementById('itemcode').addEventListener('change', function (event) {
                let barcode = document.getElementById('itemcode').value
                fetch(`http://localhost:3000/data/goods/edit/${barcode}`).then((response) => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                }).then((response) => {
                    document.getElementById('goodsname').value = response.data[0].name
                    document.getElementById('stock').value = response.data[0].stock
                    document.getElementById('purchaseprice').value = response.data[0].purchaseprice
                    document.getElementById('totalpriceText').value = formatCurrency(document.getElementById('quantity').value * document.getElementById('purchaseprice').value)
                    document.getElementById('totalprice').value = document.getElementById('quantity').value * document.getElementById('purchaseprice').value
                })
            })

            const calculateTotalPrice = () => {
                document.getElementById('totalpriceText').value = formatCurrency(document.getElementById('quantity').value * document.getElementById('purchaseprice').value)
                document.getElementById('totalprice').value = document.getElementById('quantity').value * document.getElementById('purchaseprice').value
            }

            document.getElementById('addPurchaseForm').addEventListener('submit', function (event) {
                event.preventDefault()
            });

            document.addEventListener("keydown", function (event) {
                if (event.key === "Enter" && event.target.tagName === "INPUT") {
                    event.preventDefault();
                }
            });

            const submitInvoice = async () => {
                console.log('Submit Invoice')
                const formData = new FormData(addPurchaseForm);
                try {
                    const response = await fetch('http://localhost:3000/data/purchases/add', {
                        method: 'POST',
                        body: formData,
                    });
                    if (!response.ok) {
                        throw new Error('Failed to submit invoice');
                    }
                    console.log('Invoice submitted successfully');
                } catch (error) {
                    console.error(error);
                }
            }

            const submitPurchase = async () => {
                console.log('Submit Purchase')
                const formData = new FormData(addPurchaseForm);
                try {
                    const response = await fetch('http://localhost:3000/data/purchaseitems/add', {
                        method: 'POST',
                        body: formData,
                    });
                    if (!response.ok) {
                        throw new Error('Failed to submit purchase');
                    }
                    console.log('Purchase submitted successfully');
                } catch (error) {
                    console.error(error);
                }
            }

            const refreshData = () => {
                console.log("Refresh Data")
                let invoice = document.getElementById("invoice").value
                fetch(`http://localhost:3000/data/purchases/edit/${invoice}`).then((response) => {
                    return response.json();
                }).then((response) => {
                    console.log(response.data[0])
                    document.getElementById('totalsumText').value = formatCurrency(response.data[0].totalsum)
                    document.getElementById('totalsum').value = response.data[0].totalsum
                }).then(() => {
                    let barcode = document.getElementById('itemcode').value
                    fetch(`http://localhost:3000/data/goods/edit/${barcode}`).then((response) => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! Status: ${response.status}`);
                        }
                        return response.json();
                    }).then((response) => {
                        document.getElementById('goodsname').value = response.data[0].name
                        document.getElementById('stock').value = response.data[0].stock
                        document.getElementById('purchaseprice').value = response.data[0].purchaseprice
                        document.getElementById('totalpriceText').value = formatCurrency(document.getElementById('quantity').value * document.getElementById('purchaseprice').value)
                        document.getElementById('totalprice').value = document.getElementById('quantity').value * document.getElementById('purchaseprice').value
                    }).then(() => {
                        readPurchaseitemsParams.query = invoice
                        fetch(`http://localhost:3000/data/purchaseitems?${new URLSearchParams(readPurchaseitemsParams).toString()}`).then((response) => {
                            return response.json();
                        }).then((response) => {
                            let tablePurchases = ''
                            response.data.forEach((item, index) => {
                                tablePurchases += `<tr>
                                <td>${index + 1}</td>
                                <td>${item.itemcode}</td>
                                <td>${item.name}</td>
                                <td>${item.quantity}</td>
                                <td>${item.purchaseprice}</td>
                                <td>${formatCurrency(item.totalprice)}</td>
                            </tr>`
                            })
                            document.getElementById('tablePurchases').innerHTML = tablePurchases
                        })
                    })
                })
            }

            const updateSupplier = async () => {
                const formData = new FormData(addPurchaseForm);
                let invoice = document.getElementById("invoice").value;
                if (formData.has('supplier')) {
                    try {
                        const response = await fetch(`http://localhost:3000/data/purchases/edit/${invoice}`, {
                            method: 'PUT',
                            body: formData,
                        });
                        if (!response.ok) {
                            throw new Error('Failed to submit invoice');
                        }
                        console.log('Invoice submitted successfully');
                        window.location.href = 'http://localhost:3000/purchases'
                    } catch (error) {
                        console.error(error);
                    }
                }
            }

            const submitData = async () => {
                const formData = new FormData(addPurchaseForm);
                let invoice = document.getElementById("invoice").value;
                console.log('sampai submitData')
                if (formData.has('itemcode')) {

                    try {
                        const response = await fetch(`http://localhost:3000/data/purchases/edit/${invoice}`);
                        const data = await response.json();
                        if (data.data.length == 0) {
                            console.log('sampai sini data length 0');
                            await submitInvoice();
                            await submitPurchase();
                        } else {
                            console.log('sampai sini data length != 0');
                            await submitPurchase();
                        }
                        await refreshData();
                    } catch (error) {
                        console.error('Error:', error);
                    }

                }
            }
        </script>
    </body>