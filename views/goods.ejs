<%- include('partials/header')%>

    <head>
        <style>
            /* Dark overlay for background when modal is open */
            #overlay {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(0, 0, 0, 0.5);
                /* Semi-transparent black */
                z-index: 1050;
                display: none;
            }

            /* Modal should be above the dark overlay */
            #formModal {
                z-index: 1060;
            }
        </style>
    </head>

    <body id="page-top">
        <!-- Page Wrapper -->
        <div id="wrapper">
            <%- include('partials/sidebar menu')%>
                <!-- Content Wrapper -->
                <div id="content-wrapper" class="d-flex flex-column">
                    <!-- Main Content -->
                    <div id="content">
                        <%- include('partials/topbar menu')%>
                            <!-- Begin Page Content -->
                            <div class="container-fluid">
                                <!-- Page Heading -->
                                <input type="hidden" name="user" id="user" value="<%= user.name %>">
                                <h3 class="h3 mb-0 text-gray-800">Goods</h3>
                                <h5 class="h5 mt-2 text-gray-600">This is data of Goods</h5>

                                <div class="card shadow mb-4">
                                    <div class="card-header">
                                        <a href="/goods/add" class="btn btn-primary btn-icon-split">
                                            <span class="icon text-white-50">
                                                <i class="fa-solid fa-plus"></i></span>
                                            <span class="text">Add</span>
                                        </a>
                                    </div>
                                    <div class="card-body">
                                        <div class="table-responsive">
                                            <div id="dataTable_wrapper" class="dataTables_wrapper dt-bootstrap4">
                                                <div class="row">
                                                    <div class="col-sm-12 col-md-6">
                                                        <div class="dataTables_length"><label>Show
                                                                <select name="dataTable_length" id="dataTable_length"
                                                                    aria-controls="dataTable"
                                                                    class="custom-select custom-select-sm form-control form-control-sm">
                                                                    <option value=3>3</option>
                                                                    <option value=10>10</option>
                                                                    <option value=100>100</option>
                                                                </select> entries</label></div>
                                                    </div>
                                                    <div class="col-sm-12 col-md-6">
                                                        <div id="dataTable_filter" class="dataTables_filter">
                                                            <label>Search:<input type="search" id="search-input"
                                                                    class="form-control form-control-sm" placeholder=""
                                                                    aria-controls="dataTable"></label>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <table class="table table-bordered dataTable" id="dataTable"
                                                            width="100%" cellspacing="0" role="grid"
                                                            aria-describedby="dataTable_info" style="width: 100%;">
                                                            <thead>
                                                                <tr role="row">
                                                                    <th id="barcodeThead" class="sorting sorting_asc"
                                                                        tabindex="0" aria-controls="dataTable"
                                                                        rowspan="1" colspan="1"
                                                                        aria-label="User ID: activate to sort column descending"
                                                                        style="width: 162px;" aria-sort="ascending">
                                                                        Barcode
                                                                    </th>
                                                                    <th id="nameThead" class="sorting" tabindex="0"
                                                                        aria-controls="dataTable" rowspan="1"
                                                                        colspan="1"
                                                                        aria-label="Name: activate to sort column ascending"
                                                                        style="width: 162px;">Name
                                                                    </th>
                                                                    <th id="stockThead" class="sorting" tabindex="0"
                                                                        aria-controls="dataTable" rowspan="1"
                                                                        colspan="1"
                                                                        aria-label="Role: activate to sort column ascending"
                                                                        style="width: 81px;">Stock
                                                                    </th>
                                                                    <th id="unitThead" class="sorting" tabindex="0"
                                                                        aria-controls="dataTable" rowspan="1"
                                                                        colspan="1"
                                                                        aria-label="Role: activate to sort column ascending"
                                                                        style="width: 81px;">Unit
                                                                    </th>
                                                                    <th id="purchasePriceThead" class="sorting"
                                                                        tabindex="0" aria-controls="dataTable"
                                                                        rowspan="1" colspan="1"
                                                                        aria-label="Role: activate to sort column ascending"
                                                                        style="width: 162px;">Purchase Price
                                                                    </th>
                                                                    <th id="sellingPriceThead" class="sorting"
                                                                        tabindex="0" aria-controls="dataTable"
                                                                        rowspan="1" colspan="1"
                                                                        aria-label="Role: activate to sort column ascending"
                                                                        style="width: 162px;">Selling Price
                                                                    </th>
                                                                    <th style="width: 324px;">
                                                                        Picture
                                                                    </th>
                                                                    <th style="width: 162px;">
                                                                        Action
                                                                    </th>
                                                                </tr>
                                                            </thead>
                                                            <tfoot>
                                                                <tr>
                                                                    <th rowspan="1" colspan="1">Barcode</th>
                                                                    <th rowspan="1" colspan="1">Name</th>
                                                                    <th rowspan="1" colspan="1">Stock</th>
                                                                    <th rowspan="1" colspan="1">Unit</th>
                                                                    <th rowspan="1" colspan="1">Purchase Price</th>
                                                                    <th rowspan="1" colspan="1">Selling Price</th>
                                                                    <th rowspan="1" colspan="1">Picture</th>
                                                                    <th rowspan="1" colspan="1">Action</th>
                                                                </tr>
                                                            </tfoot>
                                                            <tbody>

                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-sm-12 col-md-5">
                                                        <div class="dataTables_info" id="dataTable_info" role="status"
                                                            aria-live="polite">Showing 0 to 0 of 0 entries</div>
                                                    </div>
                                                    <div class="col-sm-12 col-md-7">
                                                        <div class="dataTables_paginate paging_simple_numbers"
                                                            id="dataTable_paginate">
                                                            <ul class="pagination">

                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                    </div>

                    <!-- Dark overlay -->
                    <div id="overlay"></div>

                    <!-- Modal Structure -->
                    <div id="deleteModal" class="modal" tabindex="-1" style="display: none;">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Delete Confirmation</h5>
                                    <button type="button" class="btn" id="closeModalButton"><i
                                            class="fa-solid fa-xmark"></i></button>
                                </div>
                                <div class="modal-body">
                                    <div id="deleteConfirmation" style="display:none;">
                                        <p class="mb-0">Are you sure, you want to delete it?</p>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button class="btn btn-secondary" id="closeOptionModal">No</button>
                                    <button class="btn btn-primary" id="submitModal">Yes</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <%- include('partials/footer')%>
                </div>
        </div>

        <script>
            var readParams = {
                page: 1,
                totalPages: 1,
                limit: 3,
                sortBy: "barcode",
                order: "asc",
                query: ''
            }

            const readData = (params) => {
                fetch(`http://localhost:3000/data/goods?${new URLSearchParams(params).toString()}`).then((response) => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                    .then((response) => {
                        let newParams = { ...params };

                        let barcodeThead = document.getElementById('barcodeThead')
                        let nameThead = document.getElementById('nameThead')
                        let stockThead = document.getElementById('stockThead')
                        let unitThead = document.getElementById('unitThead')
                        let purchasePriceThead = document.getElementById('purchasePriceThead')
                        let sellingPriceThead = document.getElementById('sellingPriceThead')

                        if (params.sortBy == "barcode" && params.order == "asc") {
                            barcodeThead.className = 'sorting sorting_asc'
                        } else if (params.sortBy == "barcode" && params.order == "desc") {
                            barcodeThead.className = 'sorting sorting_desc'
                        } else {
                            barcodeThead.className = 'sorting'
                        }

                        if (params.sortBy == "name" && params.order == "asc") {
                            nameThead.className = 'sorting sorting_asc'
                        } else if (params.sortBy == "name" && params.order == "desc") {
                            nameThead.className = 'sorting sorting_desc'
                        } else {
                            nameThead.className = 'sorting'
                        }

                        if (params.sortBy == "stock" && params.order == "asc") {
                            stockThead.className = 'sorting sorting_asc'
                        } else if (params.sortBy == "stock" && params.order == "desc") {
                            stockThead.className = 'sorting sorting_desc'
                        } else {
                            stockThead.className = 'sorting'
                        }

                        if (params.sortBy == "unit" && params.order == "asc") {
                            unitThead.className = 'sorting sorting_asc'
                        } else if (params.sortBy == "unit" && params.order == "desc") {
                            unitThead.className = 'sorting sorting_desc'
                        } else {
                            unitThead.className = 'sorting'
                        }

                        if (params.sortBy == "purchaseprice" && params.order == "asc") {
                            purchasePriceThead.className = 'sorting sorting_asc'
                        } else if (params.sortBy == "purchaseprice" && params.order == "desc") {
                            purchasePriceThead.className = 'sorting sorting_desc'
                        } else {
                            purchasePriceThead.className = 'sorting'
                        }

                        if (params.sortBy == "sellingprice" && params.order == "asc") {
                            sellingPriceThead.className = 'sorting sorting_asc'
                        } else if (params.sortBy == "sellingprice" && params.order == "desc") {
                            sellingPriceThead.className = 'sorting sorting_desc'
                        } else {
                            sellingPriceThead.className = 'sorting'
                        }

                        let htmlTbody = '';
                        response.data.forEach((item, index) => {
                            htmlTbody += `
                            <tr>
                                <td>${item.barcode}</td>
                                <td>${item.name}</td>
                                <td>${item.stock}</td>
                                <td>${item.unit}</td>
                                <td>${item.purchaseprice}</td>
                                <td>${item.sellingprice}</td>
                                <td><img class="img-fluid" src = "/img/goods/${item.picture}" alt = "${item.name}" style="width: 128px;"></td>
                                <td><a href="/goods/edit/${item.barcode}" class="btn btn-success btn-circle" ><i class="fa-solid fa-pen-to-square"></i></a>
                                    <button type="button" class="btn btn-danger btn-circle" onClick="openDeleteModal('${item.barcode}')"><i class="fa-solid fa-trash-can"></i></button>
                                    </td>
                            </tr>
                            `
                        })
                        document.querySelector('table tbody').innerHTML = htmlTbody

                        let startingIndex = (response.page - 1) * response.limit

                        let showEntryText = ''
                        if (response.totalData == 0) {
                            showEntryText += `Showing 0 to 0 of 0 entries`
                        } else if (response.page * response.limit > response.totalData || response.limit == 0) {
                            showEntryText += `Showing ${startingIndex + 1} to ${response.totalData} of ${response.totalData}`
                        } else {
                            showEntryText += `Showing ${startingIndex + 1} to ${response.page * response.limit} of ${response.totalData}`
                        }
                        document.getElementById('dataTable_info').innerText = showEntryText

                        let paging = '';
                        let maxPagesToShow = 5;
                        let currentPage = params.page;
                        let totalPages = response.totalPages;

                        if (totalPages > maxPagesToShow) {
                            if (currentPage > 1) {
                                newParams.page = currentPage - 1;
                                paging += `<li class="paginate_button page-item previous enabled"><button type="button" class="page-link" onClick='readData(${JSON.stringify(newParams)})'><span class="text-primary" aria-hidden="true">Previous</span></button></li>`;
                            } else {
                                paging += `<li class="paginate_button page-item previous disabled"><span class="text-gray-600 page-link" aria-hidden="true">Previous</span></li>`;
                            }

                            newParams.page = 1;

                            // Show the first page
                            if (currentPage == 1) {
                                paging += `<li class="page-item active"><button type="button" class="page-link" onClick='readData(${JSON.stringify(newParams)})'>1</button></li>`;
                            } else {
                                paging += `<li class="page-item"><button type="button" class="page-link" onClick='readData(${JSON.stringify(newParams)})'>1</button></li>`;
                            }

                            // Add ellipsis if there are too many pages before the current one
                            if (currentPage > 3) {
                                paging += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
                            }

                            // Show pages around the current page
                            let startPage = Math.max(2, currentPage - 1); // Start from page 2, since 1 is always shown
                            let endPage = Math.min(totalPages - 1, currentPage + 1); // Ensure not to go beyond the second last page

                            for (let i = startPage; i <= endPage; i++) {
                                newParams.page = i;
                                if (currentPage == i) {
                                    paging += `<li class="page-item active"><button type="button" class="page-link" onClick='readData(${JSON.stringify(newParams)})'>${i}</button></li>`;
                                } else {
                                    paging += `<li class="page-item"><button type="button" class="page-link" onClick='readData(${JSON.stringify(newParams)})'>${i}</button></li>`;
                                }
                            }

                            // Add ellipsis if there are too many pages after the current one
                            if (currentPage < totalPages - 2) {
                                paging += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
                            }

                            // Show the last page
                            if (currentPage == totalPages) {
                                newParams.page = totalPages;
                                paging += `<li class="page-item active"><button type="button" class="page-link" onClick='readData(${JSON.stringify(newParams)})'>${totalPages}</button></li>`;
                            } else {
                                newParams.page = totalPages;
                                paging += `<li class="page-item"><button type="button" class="page-link" onClick='readData(${JSON.stringify(newParams)})'>${totalPages}</button></li>`;
                            }

                            if (currentPage < totalPages) {
                                newParams.page = currentPage + 1;
                                paging += `<li class="paginate_button page-item next enabled"><button type="button" class="page-link" onClick='readData(${JSON.stringify(newParams)})'><span class="text-primary" aria-hidden="true">Next</span></button></li>`;
                            } else {
                                paging += `<li class="paginate_button page-item next disabled"><span class="text-gray-600 page-link" aria-hidden="true">Next</span></li>`;
                            }
                        } else {
                            if (!(params.page == 1)) {
                                newParams.page = params.page - 1;
                                paging += `<li class="paginate_button page-item previous enabled"><button type="button" class="page-link" onClick='readData(${JSON.stringify(newParams)})'><span class="text-primary" aria-hidden="true">Previous</span></button></li>`
                            } else {
                                paging += `<li class="paginate_button page-item previous disabled"><span class="text-gray-600 page-link" aria-hidden="true">Previous</span></li>`
                            }

                            newParams.page = 1;
                            for (let i = 1; i <= response.totalPages; i++) {
                                if (response.page == i) {
                                    newParams.page = i;
                                    paging += `<li class="page-item active"><button type="button" class="page-link" onClick='readData(${JSON.stringify(newParams)})'>${i}</button></li>`
                                }
                                else {
                                    newParams.page = i;
                                    paging += `<li class="page-item"><button type="button" class="page-link" onClick='readData(${JSON.stringify(newParams)})'>${i}</button></li>`
                                }
                            }

                            if (!(params.page == response.totalPages)) {
                                newParams.page = params.page + 1
                                paging += `<li class="paginate_button page-item next enabled"><button type="button" class="page-link" onClick='readData(${JSON.stringify(newParams)})'><span class="text-primary" aria-hidden="true">Next</span></button></li>`
                            } else {
                                paging += `<li class="paginate_button page-item next disabled"><span class="text-gray-600 page-link" aria-hidden="true">Next</span></li>`

                            }
                        }
                        document.querySelector('.pagination').innerHTML = paging;
                    })
                    .catch((err) => {
                        console.error(err);
                    });
            }

            readData(readParams)

            const resetForm = () => {
                // document.getElementById('idObj').value = ''
                // document.getElementById("form-search").reset();
            }

            document.getElementById('dataTable_length').addEventListener('change', function () {
                const selectElement = document.getElementById('dataTable_length')
                readParams.limit = parseInt(selectElement.value)
                console.log(readParams)
                readData(readParams)
            });

            document.getElementById('search-input').addEventListener('change', function () {
                const searchInput = document.getElementById('search-input')
                const selectElement = document.getElementById('dataTable_length')
                readParams.limit = parseInt(selectElement.value)
                readParams.query = searchInput.value
                console.log(readParams.query)
                readData(readParams)
            })

            const barcodeThead = document.getElementById('barcodeThead')
            const nameThead = document.getElementById('nameThead')
            const stockThead = document.getElementById('stockThead')
            const unitThead = document.getElementById('unitThead')
            const purchasePriceThead = document.getElementById('purchasePriceThead')
            const sellingPriceThead = document.getElementById('sellingPriceThead')

            barcodeThead.onclick = function () {
                if (readParams.sortBy != 'barcode') {
                    readParams.sortBy = 'barcode'
                    readParams.order = 'asc'
                } else if (readParams.order == 'asc') {
                    readParams.order = 'desc'
                } else {
                    readParams.order = 'asc'
                }
                readData(readParams)
            }

            nameThead.onclick = function () {
                if (readParams.sortBy != 'name') {
                    readParams.sortBy = 'name'
                    readParams.order = 'asc'
                } else if (readParams.order == 'asc') {
                    readParams.order = 'desc'
                } else {
                    readParams.order = 'asc'
                }
                readData(readParams)
            }

            stockThead.onclick = function () {
                if (readParams.sortBy != 'stock') {
                    readParams.sortBy = 'stock'
                    readParams.order = 'asc'
                } else if (readParams.order == 'asc') {
                    readParams.order = 'desc'
                } else {
                    readParams.order = 'asc'
                }
                readData(readParams)
            }

            unitThead.onclick = function () {
                if (readParams.sortBy != 'unit') {
                    readParams.sortBy = 'unit'
                    readParams.order = 'asc'
                } else if (readParams.order == 'asc') {
                    readParams.order = 'desc'
                } else {
                    readParams.order = 'asc'
                }
                readData(readParams)
            }

            purchasePriceThead.onclick = function () {
                if (readParams.sortBy != 'purchaseprice') {
                    readParams.sortBy = 'purchaseprice'
                    readParams.order = 'asc'
                } else if (readParams.order == 'asc') {
                    readParams.order = 'desc'
                } else {
                    readParams.order = 'asc'
                }
                readData(readParams)
            }

            sellingPriceThead.onclick = function () {
                if (readParams.sortBy != 'sellingprice') {
                    readParams.sortBy = 'sellingprice'
                    readParams.order = 'asc'
                } else if (readParams.order == 'asc') {
                    readParams.order = 'desc'
                } else {
                    readParams.order = 'asc'
                }
                readData(readParams)
            }

            const closeModalButton = document.getElementById('closeModalButton');
            const closeOptionModal = document.getElementById('closeOptionModal');
            const deleteModal = document.getElementById('deleteModal');
            const submitModal = document.getElementById('submitModal');
            const deleteConfirmation = document.getElementById('deleteConfirmation');
            const overlay = document.getElementById('overlay');

            function openDeleteModal(barcode) {
                deleteModal.style.display = 'block'
                deleteConfirmation.style.display = 'block'
                overlay.style.display = 'block'
                submitModal.onclick = function () { deleteGood(barcode); }
            }

            function closeModal() {
                deleteModal.style.display = 'none';
                overlay.style.display = 'none';
            }

            closeModalButton.onclick = function () {
                closeModal()
            }

            closeOptionModal.onclick = function () {
                closeModal()
            }

            const deleteGood = (barcode) => {
                fetch(`http://localhost:3000/data/goods/delete/`, {
                    method: 'DELETE',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ barcode })
                }).then((response) => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                }).then((response) => {
                    closeModal()
                    readParams.sortBy = 'barcode'
                    readParams.order = 'asc'
                    readData(readParams)
                });
            }

        </script>

    </body>

    </html>