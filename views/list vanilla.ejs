<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="stylesheets/bootstrap.css">
    <link rel="icon" type="image/x-icon" href="/images/web_icon.png">
    <link rel="stylesheet" href="fontawesome/css/all.css">
    <title>List Data</title>
</head>

<body>
    <div class="container">
        <h1>BREAD (Browse, Read, Edit, Add, Delete)</h1>
        <form id="form-search">
            <div class="card">
                <div class="card-header">
                    <h2>Form Pencarian</h2>
                </div>

                <div class="card-body">

                    <div class="row mb-3">
                        <label for="searchId" class="col-sm-2 col-form-label">ID</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="searchId" name="searchId">
                        </div>
                    </div>

                    <div class="row mb-3">
                        <label for="searchString" class="col-sm-2 col-form-label">String</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="searchString" name="searchString">
                        </div>
                    </div>

                    <div class="row mb-3">
                        <label for="searchInteger" class="col-sm-2 col-form-label">Integer</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="searchInteger" name="searchInteger">
                        </div>
                    </div>

                    <div class="row mb-3">
                        <label for="searchFloat" class="col-sm-2 col-form-label">Float</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="searchFloat" name="searchFloat">
                        </div>
                    </div>

                    <div class="row mb-3">
                        <label for="searchDate" class="col-sm-2 col-form-label">Date</label>
                        <div class="col-sm-10">
                            <div class="input-group">
                            <input type="date" class="form-control" id="startDate" name="startDate">
                            <span class="input-group-text">To</span>
                            <input type="date" class="form-control" id="endDate" name="endDate">
                            </div>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <label for="searchBoolean" class="col-sm-2 col-form-label">Boolean</label>
                        <div class="col-sm-10">
                            <select name="searchBoolean" id="searchBoolean" class="form-select">
                                <option value="">--Pilih boolean--</option>
                                <option value=true>True</option>
                                <option value=false>False</option>
                            </select>
                        </div>
                    </div>

                </div>
                <div class="card-footer">
                    <button type="submit" class="btn btn-primary">Cari</button>
                    <button class="btn btn-warning" id="form-reset" onClick="resetForm()" style="color: #ffffff;">Reset</button>
                </div>
            </div>
        </form>

        <h2 class="mt-3">Result</h2>
        <table class="table table-striped table-hover">
            <thead class="table-primary">
            
            </thead>
            <tbody>

            </tbody>
        </table>

        <form id="form-data">
            <input type="hidden" id="idObj" name="idObj" value="">
            <div class="card">
                <div class="card-header">
                    <h2>Form Data</h2>
                </div>

                <div class="card-body">

                    <div class="row mb-3">
                        <label for="id" class="col-sm-2 col-form-label">ID</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="id" name="id" placeholder="Masukkan id data"
                                required>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <label for="string" class="col-sm-2 col-form-label">String</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="string" name="string"
                                placeholder="Masukkan data string" required>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <label for="integer" class="col-sm-2 col-form-label">Integer</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="integer" name="integer"
                                placeholder="Masukkan data integer" required>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <label for="float" class="col-sm-2 col-form-label">Float</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="float" name="float"
                                placeholder="Masukkan data float" required>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <label for="date" class="col-sm-2 col-form-label">Date</label>
                        <div class="col-sm-10">
                            <input type="date" class="form-control" id="date" name="date" required>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <label for="boolean" class="col-sm-2 col-form-label">Boolean</label>
                        <div class="col-sm-10">
                            <select name="boolean" id="boolean" class="form-select" required>
                                <option value="">--Pilih boolean--</option>
                                <option value=true>True</option>
                                <option value=false>False</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <button type="submit" class="btn btn-primary">Simpan</button>
                </div>
            </div>
        </form>
        <ul class="pagination mt-3">

        </ul>
        <p></p>

    </div>

</body>

<script>
    const readData = (link) => {
        fetch(`http://localhost:3000/data?${link}`).then((response) => {
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response.json();
        })
            .then((response) => {
                let htmlThead = '';
                htmlThead += `<tr>`
                if (link.includes("sortBy=id&order=asc")){
                    htmlThead += `<th><button class="btn" onclick="readData('${link.replace("order=asc","order=desc")}')">ID<i class="fa-solid fa-sort-down" style="margin-left:10px;"></i></button></th>`
                }
                else if (link.includes("sortBy=id&order=desc")){
                    htmlThead += `<th><button class="btn" onclick="readData('${link.replace("order=desc","order=asc")}')">ID<i class="fa-solid fa-sort-up" style="margin-left:10px;"></i></button></th>`
                }
                else {
                    let newLink = link.split("&")
                    newLink[7] = "sortBy=id"
                    newLink[8] = "order=asc"
                    newLink = newLink.join("&")
                    htmlThead += `<th><button class="btn" onclick="readData('${newLink}')">ID<i class="fa-solid fa-sort" style="margin-left:10px;"></i></button></th>`
                }

                if (link.includes("sortBy=string&order=asc")){
                    htmlThead += `<th><button class="btn" onclick="readData('${link.replace("order=asc","order=desc")}')">String<i class="fa-solid fa-sort-down" style="margin-left:10px;"></i></button></th>`
                }
                else if (link.includes("sortBy=string&order=desc")){
                    htmlThead += `<th><button class="btn" onclick="readData('${link.replace("order=desc","order=asc")}')">String<i class="fa-solid fa-sort-up" style="margin-left:10px;"></i></button></th>`
                }
                else {
                    let newLink = link.split("&")
                    newLink[7] = "sortBy=string"
                    newLink[8] = "order=asc"
                    newLink = newLink.join("&")
                    htmlThead += `<th><button class="btn" onclick="readData('${newLink}')">String<i class="fa-solid fa-sort" style="margin-left:10px;"></i></button></th>`
                }

                if (link.includes("sortBy=integer&order=asc")){
                    htmlThead += `<th><button class="btn" onclick="readData('${link.replace("order=asc","order=desc")}')">Integer<i class="fa-solid fa-sort-down" style="margin-left:10px;"></i></button></th>`
                }
                else if (link.includes("sortBy=integer&order=desc")){
                    htmlThead += `<th><button class="btn" onclick="readData('${link.replace("order=desc","order=asc")}')">Integer<i class="fa-solid fa-sort-up" style="margin-left:10px;"></i></button></th>`
                }
                else {
                    let newLink = link.split("&")
                    newLink[7] = "sortBy=integer"
                    newLink[8] = "order=asc"
                    newLink = newLink.join("&")
                    htmlThead += `<th><button class="btn" onclick="readData('${newLink}')">Integer<i class="fa-solid fa-sort" style="margin-left:10px;"></i></button></th>`
                }

                if (link.includes("sortBy=float&order=asc")){
                    htmlThead += `<th><button class="btn" onclick="readData('${link.replace("order=asc","order=desc")}')">Float<i class="fa-solid fa-sort-down" style="margin-left:10px;"></i></button></th>`
                }
                else if (link.includes("sortBy=float&order=desc")){
                    htmlThead += `<th><button class="btn" onclick="readData('${link.replace("order=desc","order=asc")}')">Float<i class="fa-solid fa-sort-up" style="margin-left:10px;"></i></button></th>`
                }
                else {
                    let newLink = link.split("&")
                    newLink[7] = "sortBy=float"
                    newLink[8] = "order=asc"
                    newLink = newLink.join("&")
                    htmlThead += `<th><button class="btn" onclick="readData('${newLink}')">Float<i class="fa-solid fa-sort" style="margin-left:10px;"></i></button></th>`
                }

                if (link.includes("sortBy=date&order=asc")){
                    htmlThead += `<th><button class="btn" onclick="readData('${link.replace("order=asc","order=desc")}')">Date<i class="fa-solid fa-sort-down" style="margin-left:10px;"></i></button></th>`
                }
                else if (link.includes("sortBy=date&order=desc")){
                    htmlThead += `<th><button class="btn" onclick="readData('${link.replace("order=desc","order=asc")}')">Date<i class="fa-solid fa-sort-up" style="margin-left:10px;"></i></button></th>`
                }
                else {
                    let newLink = link.split("&")
                    newLink[7] = "sortBy=date"
                    newLink[8] = "order=asc"
                    newLink = newLink.join("&")
                    htmlThead += `<th><button class="btn" onclick="readData('${newLink}')">Date<i class="fa-solid fa-sort" style="margin-left:10px;"></i></button></th>`
                }

                if (link.includes("sortBy=boolean&order=asc")){
                    htmlThead += `<th><button class="btn" onclick="readData('${link.replace("order=asc","order=desc")}')">Boolean<i class="fa-solid fa-sort-down" style="margin-left:10px;"></i></button></th>`
                }
                else if (link.includes("sortBy=boolean&order=desc")){
                    htmlThead += `<th><button class="btn" onclick="readData('${link.replace("order=desc","order=asc")}')">Boolean<i class="fa-solid fa-sort-up" style="margin-left:10px;"></i></button></th>`
                }
                else {
                    let newLink = link.split("&")
                    newLink[7] = "sortBy=boolean"
                    newLink[8] = "order=asc"
                    newLink = newLink.join("&")
                    htmlThead += `<th><button class="btn" onclick="readData('${newLink}')">Boolean<i class="fa-solid fa-sort" style="margin-left:10px;"></i></button></th>`
                }

                htmlThead +=`<th>Action</th>`
                htmlThead +=`</tr>`
                document.querySelector('table thead').innerHTML = htmlThead;

                let htmlTbody = '';
                response.data.forEach((item, index) => {
                
                    htmlTbody += `
                <tr>
                    <td>${item.id}</td>
                    <td>${item.string}</td>
                    <td>${item.integer}</td>
                    <td>${item.float}</td>
                    <td>${item.date}</td>
                    <td>${item.boolean}</td>
                    <td><button type="button" class="btn btn-warning" style="color: #ffffff;" onClick="editData('${item._id}')"><i class="fa-solid fa-pencil"></i></button>
                    <button type="button" class="btn btn-danger" onClick="deleteData('${item._id}')"><i class="fa-solid fa-trash-can"></i></button></td>
                </tr>
                `
                })
                document.querySelector('table tbody').innerHTML = htmlTbody

                let paging = '';

                paging += `<button type="button" class="page-link" onClick="readData('${link.slice(0,link.length-1) + 1}')"><span aria-hidden="true">&laquo;</span></button>`

                for (let i = 1; i <= response.totalPages; i++) {
                    if (link.includes(`page=${i}`)){
                        paging += `<li class="page-item"><button type="button" class="page-link active" onClick="readData('${link.slice(0,link.length-1) + i}')">${i}</button></li>`
                    }
                    else {
                        paging += `<li class="page-item"><button type="button" class="page-link" onClick="readData('${link.slice(0,link.length-1) + i}')">${i}</button></li>`
                    }
                }
                paging += `<button type="button" class="page-link" onClick="readData('${link.slice(0,link.length-1) + response.totalPages}')"><span aria-hidden="true">&raquo;</span></button>`

                document.querySelector('ul').innerHTML = paging

            })
            .catch((err) => {
                console.error(err);
            });
    }

    const saveData = (idObj, id, string, integer, float, date, boolean) => {
        if (idObj) {
            fetch(`http://localhost:3000/data/${idObj}`, {
                method: 'PUT',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id, string, integer, float, date, boolean })
            }).then((response) => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            }).then((response) => {
                readData(`id=&string=&integer=&float=&date=&boolean=&display=3&sortBy=id&order=asc&page=1`)
                document.getElementById('idObj').value = ''
                document.getElementById("form-data").reset();
            });
        } else {
            fetch("http://localhost:3000/data", {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ idObj, id, string, integer, float, date, boolean })
            }).then((response) => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            }).then((response) => {
                readData(`id=&string=&integer=&float=&startDate=&endDate=&boolean=&display=3&sortBy=id&order=asc&page=1`)
                document.getElementById("form-data").reset();
            });
        }
    }

    const editData = (idObj) => {
        fetch(`http://localhost:3000/data/${idObj}`, {
            method: 'GET',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then((response) => {
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response.json();
        }).then((response) => {
            document.getElementById('idObj').value = idObj
            document.getElementById('id').value = response.id
            document.getElementById('string').value = response.string
            document.getElementById('integer').value = response.integer
            document.getElementById('float').value = response.float
            document.getElementById('date').value = response.date
            document.getElementById('boolean').value = response.boolean
        });
    }

    const deleteData = (idObj) => {
        fetch(`http://localhost:3000/data/${idObj}`, {
            method: 'DELETE',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then((response) => {
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response.json();
        }).then((response) => {
            readData(`id=&string=&integer=&float=&startDate=&endDate=&boolean=&display=3&sortBy=id&order=asc&page=1`)
        });
    }

    const resetForm = () => {
        document.getElementById('idObj').value = ''
        document.getElementById("form-search").reset();
    }

    readData(`id=&string=&integer=&float=&startDate=&endDate=&boolean=&display=3&sortBy=id&order=asc&page=1`)

    document.getElementById('form-data').addEventListener('submit', function (event) {
        event.preventDefault();
        const idObj = document.getElementById('idObj').value
        const id = document.getElementById('id').value
        const string = document.getElementById('string').value
        const integer = document.getElementById('integer').value
        const float = document.getElementById('float').value
        const date = document.getElementById('date').value
        const boolean = document.getElementById('boolean').value
        saveData(idObj, id, string, integer, float, date, boolean)
    })

  document.getElementById('form-search').addEventListener('submit', function (event) {
    event.preventDefault();
        const display = 3;
        const page = 1;
        const id = document.getElementById('searchId').value
        const string = document.getElementById('searchString').value
        const integer = document.getElementById('searchInteger').value
        const float = document.getElementById('searchFloat').value
        const startDate = document.getElementById('startDate').value
        const endDate = document.getElementById('endDate').value
        const boolean = document.getElementById('searchBoolean').value
        const sortby = 'id';
        const order = 1;
        let params = {id, string, integer, float, startDate, endDate, boolean, display, page}
        let link = new URLSearchParams(params).toString()
    readData(link)
  })

</script>

</html>